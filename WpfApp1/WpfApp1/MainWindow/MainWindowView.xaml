<Window x:Class="WpfApp1.MainWindow.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1.MainWindow"
        xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
        xmlns:wpfLib="clr-namespace:WpfLibrary.Converter;assembly=WpfLibrary"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Title="MainWindow" d:Height="450" d:Width="500"
        SizeToContent="WidthAndHeight" Closing="Window_Closing">
    <Window.Resources>
        <wpfLib:BoolToColorConverter x:Key="boolToColorConverter"/>
        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
    </Window.Resources>
    
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Margin="5" HorizontalAlignment="Left" Text="文字入力（半角10/全角5文字以下）"/>
            <TextBlock Grid.Column="0" Grid.Row="1" Margin="5" HorizontalAlignment="Left" Text="数値入力（500以下）"/>
            <TextBlock Grid.Column="0" Grid.Row="2" Margin="5" HorizontalAlignment="Left" Text="チェックボックス入力"/>
            <TextBlock Grid.Column="0" Grid.Row="3" Margin="5" HorizontalAlignment="Left">
                コンボボックス入力<LineBreak />
                （チェックボックスがTrue時にのみ「ネコ」有効）
            </TextBlock>

            <TextBox Grid.Column="1" Grid.Row="0" Margin="5" Width="200" HorizontalAlignment="Left" Text="{Binding Text.Value}"
                     Foreground="{Binding IsTextChanged.Value, Converter={StaticResource boolToColorConverter}}"/>
            <TextBox Grid.Column="1" Grid.Row="1" Margin="5" Width="100" HorizontalAlignment="Left" Text="{Binding Number.Value}"/>
            <Rectangle Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Fill="Red" Width="3" Margin="0,5"
                       Visibility="{Binding IsNumberChanged.Value, Converter={StaticResource boolToVisibility}}"/>
            <CheckBox Grid.Column="1" Grid.Row="2" Margin="5" Content="Sample Text" HorizontalAlignment="Left"
                      IsChecked="{Binding Bool.Value}"
                      Foreground="{Binding IsBoolChanged.Value, Converter={StaticResource boolToColorConverter}}"
                      BorderBrush="{Binding IsBoolChanged.Value, Converter={StaticResource boolToColorConverter}}"/>
            <ComboBox Grid.Column="1" Grid.Row="3" Margin="5" ItemsSource="{Binding ComboBoxItems.Value}"
                      DisplayMemberPath="Display" SelectedValuePath="Value" SelectedValue="{Binding SomeEnum.Value}"
                      Foreground="{Binding IsSomeEnumChanged.Value, Converter={StaticResource boolToColorConverter}}"/>
        </Grid>

        <DataGrid Grid.Row="1" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                  CanUserResizeRows="False" CanUserSortColumns="False"
                  SelectionUnit="Cell" SelectionMode="Single"
                  HeadersVisibility="None"
                  VirtualizingPanel.IsVirtualizing="True" EnableColumnVirtualization="True" EnableRowVirtualization="True"
                  VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True"
                  ItemsSource="{Binding SpeakerOnOffs}" MaxWidth="500" MaxHeight="300"
                  d:ItemsSource="{d:SampleData ItemCount=10}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[0].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[0].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[1].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[1].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[2].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[2].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[3].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[3].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[4].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[4].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[5].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[5].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[6].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[6].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[7].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[7].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[8].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[8].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding SpeakerOnOff[9].Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="BorderBrush" Value="{Binding IsSpeakerOnOffChanged[9].Value, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="2" Margin="5" HorizontalAlignment="Center" Background="LightSkyBlue">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <CheckBox Margin="5" VerticalAlignment="Center" Content="自動保存" IsChecked="{Binding IsAutoSave}"/>
                <Button Margin="5" VerticalAlignment="Center" Content="保存" Command="{Binding SaveCommand}"/>
            </StackPanel>
            <Button Grid.Row="1" Margin="5" Content="初期化" Command="{Binding InitCommand}"/>
        </Grid>
    </Grid>
</Window>
